@import "./mixins/forms";

.components {
  margin-top: $margin-component-vertical;
  margin-bottom: $margin-component-vertical;
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
}

label {
  @extend .components;
}

.messages {
  @extend .components;
}

.form-control {
  @extend .components;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  //border: 1px solid $input-border;
  border-radius: $border-radius-base;
  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  //@include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  //@include transition(border-color ease-in-out .30s, box-shadow ease-in-out .30s);
  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  // Placeholder
  /*@include placeholder;

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }

  // [converter] extracted textarea& to textarea.form-control*/
}

.messages {
  color: $error-color;
}

.box-default {
  border: 1px solid $box-border-color;
  box-shadow: 5px 5px 10px 0 lighten($box-border-color, 50%);
}

.box-child-default {
  border: 1px solid $box-border-color;
  box-shadow: 3px 3px 5px 0 lighten($box-border-color, 50%);
}

.box-error {
  border: 1px solid $box-border-color;
    box-shadow: 3px 3px 5px 0 lighten($error-color, 50%);
}

.box-ok {
  border: 1px solid $box-border-color;
  box-shadow: 3px 3px 5px 0 lighten($ok-color, 50%);
}


.box-form.ng-pristine {
  @extend .box-default
}

.box-form.ng-invalid.ng-dirty {
  @extend .box-error
}

.box-form.ng-valid {
  @extend .box-ok
}

.box-form {
  .ng-pristine {
    @extend .box-child-default
  }

  .ng-invalid.ng-dirty {
    @extend .box-error
  }

  .ng-valid {
    @extend .box-child-default
  }
}